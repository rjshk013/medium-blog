version: '3'
services:
  # Frontend (ReactJS)
  frontend:
    build:
      context: ./reactjs-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"  # Maps port 80 in the container to 3000 on the host
    depends_on:
      - backend  # Ensure the backend is running first

  # Backend (Flask with Swagger)
  backend:
    build:
      context: ./swagger-backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"  # Maps port 5000 in the container to 5000 on the host
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy  # Wait for the database to be healthy

  # Database (PostgreSQL)
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

# Named volume to persist database data
volumes:
  postgres-data:
